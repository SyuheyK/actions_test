name: Add comment by comment
on:
  issue_comment:
    types: [created]
permissions:
  contents: read
  issues: write
  id-token: write
jobs:
  add-comment:
    if: ${{ !github.event.issue.pull_request && github.event.issue.state != 'closed' && startsWith(github.event.comment.body, '/add_comment') && contains(github.event.issue.labels.*.name, 'テスト') }}

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.7]

    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v2

      # Setup Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.3.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Issue Body Parser
        uses: peter-murray/issue-body-parser-action@v1
        id: parser
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # This is assuming that you are triggering off the issue, otherwise you will need to know the issue number
          issue_id: ${{ github.event.issue.number }}
          payload: yaml
          payload_marker: test

      # - name: Run Python Code
      #   id: python_run
      #   run: python ./src/convert_sql.py './src/template.sql' '${{ steps.parser.outputs.payload }}'

      - name: Add comment
        uses: peter-evans/create-or-update-comment@v1.4.5
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            これはあたらしくできた comment だお．
            ${{ steps.parser.outputs.payload }}
            ${{ steps.parser.outputs.payload.table_name }}
            $(date +'%Y%m%d')
#            ${{ steps.python_run.outputs.test}}

      # - name: Resulting JSON string
      #   run: echo ${{ steps.parser.outputs.payload }}

      # - name: Resulting SQL
      #   run: echo '${{ steps.python_run.outputs.test }}'